@page "/CreateAccount"
@using DTOs
@using QuickShiftUI.Components.Auth
@inject AuthenticationStateProvider AuthProvider

<h3>Create Account</h3>

<EditForm Model="newEmployee" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mt-4">
        <label>First Name:</label>
        <InputText @bind-Value="newEmployee.FirstName" />
    </div>
    <div class="mt-4">
        <label>Last Name:</label>
        <InputText @bind-Value="newEmployee.LastName" />
    </div>
    <div class="mt-4">
        <label>Working Number:</label>
        <InputNumber @bind-Value="newEmployee.WorkingNumber" />
    </div>
    <div class="mt-4">
        <label>Email:</label>
        <InputText @bind-Value="newEmployee.Email" />
    </div>
    <div class="mt-4">
        <label>Password:</label>
        <InputText type="password" @bind-Value="newEmployee.Password" />
    </div>
    <button class="mt-4" type="submit">Register</button>
</EditForm>

@code {
    private NewEmployeeDTO newEmployee = new NewEmployeeDTO();

    private async Task HandleValidSubmit()
    {
        try
        {
            await ((SimpleAuthProvider)AuthProvider).Register(newEmployee.FirstName, newEmployee.LastName, newEmployee.WorkingNumber, newEmployee.Email, newEmployee.Password);
        }
        catch (Exception ex)
        {
        }
    }
}