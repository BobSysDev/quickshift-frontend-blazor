@page "/createAccount"
@using DTOs
@using QuickShiftUI.Components.Auth
@inject SimpleAuthProvider AuthProvider

<div class="create-account-container">
    <h2>Create Account</h2>

    <EditForm Model="newEmployee" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="firstName">First Name:</label>
            <InputText id="firstName" class="form-control" @bind-Value="newEmployee.FirstName" />
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <InputText id="lastName" class="form-control" @bind-Value="newEmployee.LastName" />
        </div>
        <div class="form-group">
            <label for="workingNumber">Working Number:</label>
            <InputNumber id="workingNumber" class="form-control" @bind-Value="newEmployee.WorkingNumber" />
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="newEmployee.Email" />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="newEmployee.Password" />
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
</div>

@code {
    private NewEmployeeDTO newEmployee = new NewEmployeeDTO();
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            await AuthProvider.Register(newEmployee.FirstName, newEmployee.LastName, newEmployee.WorkingNumber, newEmployee.Email, newEmployee.Password);
            errorMessage = string.Empty; 
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }
}