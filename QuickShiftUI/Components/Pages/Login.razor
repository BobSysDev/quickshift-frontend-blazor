@page "/login"
@using QuickShiftUI.Components.Auth
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager navMgr

<div class="login-container">
    <h3>Login</h3>

    <AuthorizeView>
        <NotAuthorized>
            <div class="login-form">
                <div class="form-group">
                    <label for="workingNumber">Working Number:</label>
                    <input type="number" id="workingNumber" class="form-control" @bind="workingNumber"/>
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" id="password" class="form-control" @bind="password"/>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="alert alert-danger">@errorLabel</div>
                }
                <button class="btn btn-primary" @onclick="LoginAsync">Log in</button>
            </div>
        </NotAuthorized>
        <Authorized>
            <h3>Hello, @context.User.Identity.Name</h3>
        </Authorized>
    </AuthorizeView>
</div>



@code {
    private string workingNumber;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        if (string.IsNullOrEmpty(workingNumber) || string.IsNullOrEmpty(password))
        {
            errorLabel = "Working Number and Password are required.";
            return;
        }

        try
        {
            int workingNumberInt = int.Parse(workingNumber);
            await ((SimpleAuthProvider)AuthProvider).Login(workingNumberInt, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }
    }
}